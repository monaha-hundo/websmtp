@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div data-bs-theme="dark">
    <div class="h1">websmtp</div>
    <a href="/?onlyNew=true" style="margin-bottom: 1em; padding: 0.5em; font-size: large;"
        class="badge text-bg-success h2 text-decoration-none">New: @Model.New
    </a>
    <a href="/?onlyNew=false" style="margin-bottom: 1em; padding: 0.5em; font-size: large;"
        class="badge  text-bg-primary h2 text-decoration-none">All: @Model.Total
    </a>

    <select class="form-select d-inline" style="width: auto;">
        <option selected>All mailboxes (@Model.Mailboxes.Count)</option>
        @if (Model.Mailboxes?.Count > 0)
        {
            foreach (var mailbox in Model.Mailboxes)
            {
                <option value="@mailbox">@mailbox</option>
            }
        }
    </select>
    <a href="/?onlyNew=true" style="margin-bottom: 1em; padding: 0.5em; font-size: large;"
        class="badge text-bg-secondary h2 text-decoration-none">Reload
    </a>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th class="">Read</th>
                    <th class="">Received</th>
                    <th class="">Subject</th>
                    <th class="">To</th>
                    <th class="">From</th>
                    <th class="">Size</th>
                    <th class=""></th>
                </tr>
            </thead>
            @foreach (var message in Model.Messages.Values)
            {
                <tr>
                    <td id="msg-read-mark-@message.Id">@(message.Read ? "#" : "")</td>
                    <td>@message.ReceivedOn</td>
                    <td class="text-nowrap">@message.Subject</td>
                    <td>@message.To</td>
                    <td>@message.From</td>
                    <td>@(message.Size)b</td>
                    <td>
                        <a class="btn btn-secondary" href="/View?msgId=@message.Id" target="msg-view"
                            onclick="openwMsgView()">View</a>
                        <button class="btn btn-secondary" href="/?markAsReadMsgId=@message.Id" target="msg-view"
                            onclick="markMessageAsRead('@message.Id')">Mark as read</button>
                    </td>
                </tr>
            }
        </table>
    </div>

    <nav  style="width: auto; display: inline-block;">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for(int pageNb = 1; pageNb <= Model.Pages; pageNb++){
            <li class="page-item"><a class="page-link" 
                href="/?onlyNew=@Model.OnlyNew&page=@pageNb&perPage=@Model.PerPage">@pageNb</a></li>
            }
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
    
        <select class="form-select d-inline" style="width: auto;">
            <option selected="@(Model.PerPage == 5)">5</option>
            <option selected="@(Model.PerPage == 50)">50</option>
            <option selected="@(Model.PerPage == 100)">100</option>
            <option selected="@(Model.PerPage == 500)">500</option>
            <option selected="@(Model.PerPage == 1000)">1000</option>
        </select>

    <section id="msg" style="display: none;">
        <a class="btn btn-secondary" href="about:blank" target="msg-view" onclick="closeMsgView()">Close</a>
        <iframe id="msg-view" name="msg-view" style="width: 100%; height: 100px;"
            src="data:text/html;base64,PGh0bWwgc3R5bGU9ImJhY2tncm91bmQ6IHJnYigzMywgMzcsIDQxKTsiPjwvaHRtbD4K"></iframe>
    </section>
</div>

@section Scripts{
    <script>
        function openwMsgView() {
            console.log('ta mère');
            let sectionEl = document.querySelector('#msg');
            sectionEl.style.display = 'block';
        }
        function closeMsgView() {
            console.log('ta mère');
            let sectionEl = document.querySelector('#msg');
            sectionEl.style.display = 'none';
        }
        function handleMessage(event) {
            if (event.origin != "https://localhost:7095") { return; }
            let height = event.data.split(':')[1];
            document.querySelector('#msg-view').style.height = height + 'px';
        }
        async function markMessageAsRead(msgId) {
            const response = await fetch(`/?markAsReadMsgId=${msgId}`);
            const result = await response.text();
            const success = result == "200";
            console.log(success);
            if (success) {
                const checkMarkEl = document.getElementById('msg-read-mark-' + msgId);
                checkMarkEl.textContent = '#';
            }
        }

        window.addEventListener('message', handleMessage, false);
    </script>
}