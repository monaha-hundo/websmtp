@page
@model MessageViewModel
@{
    Layout = "_LayoutEmpty";
}

@section Head {
    <link rel="stylesheet" href="~/css/view.css" asp-append-version="true" />
}

<input id="msg--id" type="hidden" value="@Model.MsgId" />

<div class="w-100 text-white">

    @* Toolbar *@
    <div id="view--msg--header" class="p-2 mb-2 border-bottom d-flex align-items-center" role="group"
        aria-label="Basic example">
        <button id="btn--close" type="button" class="btn btn-sm btn-outlined me-2" title="Close message">
            <i class="bi bi-x-circle fs-5"></i>
        </button>
        <button id="btn--previous" type="button" class="btn btn-sm btn-outlined me-2" title="Previous message">
            <i class="bi bi-arrow-up fs-5"></i>
        </button>
        <button id="btn--next" type="button" class="btn btn-sm btn-outlined me-2" title="Next message">
            <i class="bi bi-arrow-down fs-5"></i>
        </button>
        <button id="btn--raw" type="button fs-5" class="btn btn-sm btn-outlined me-2" title="Show raw message">
            <i class="bi bi-file-earmark-code fs-5"></i>
        </button>
        @if (!Model.Message.Sent)
        {
            <div class="me-2">
                <button id="btn--undelete" type="button"
                    class='btn btn-sm btn-outlined @(Model.Message.Deleted?"":"d-none")' title="Remove from trash">
                    <i class="bi bi-recycle fs-5"></i>
                </button>
                <button id="btn--delete" type="button" class='btn btn-sm btn-outlined @(Model.Message.Deleted?"d-none":"")'
                    title="Put in trash">
                    <i class="bi bi-trash fs-5"></i>
                </button>
            </div>
        }
        <div class="me-2">
            <button id="btn--unread" type="button" class='btn btn-sm btn-outlined @(Model.Message.Read?"":"d-none")'
                title="Mark as unread">
                <i class="bi bi-envelope fs-5"></i>
            </button>
            <button id="btn--read" type="button" class='btn btn-sm btn-outlined @(Model.Message.Read?"d-none":"")'
                title="Mark as read">
                <i class="bi bi-envelope-open fs-5"></i>
            </button>
        </div>
        @if (!Model.Message.Sent)
        {
            <button id="btn--report--spam" class='btn btn-sm btn-outlined me-2 @(Model.Message.IsSpam ? "d-none":"")'
                title="Report spam">
                <i class="bi bi-virus2 fs-5"></i>
            </button>
            <button id="btn--unreport--spam" class='btn btn-sm btn-outlined me-2 @(Model.Message.IsSpam ? "":"d-none")'
                title="Revoke spam">
                <i class="bi bi-virus2 fs-5"></i>
            </button>
            <button id="btn--reply" reply-to="@Model.Message.From" class="btn btn-sm btn-outlined me-2" title="Reply">
                <i class="bi bi-reply fs-5"></i>
            </button>
        }
    </div>

    @* MainView *@
    <div class="border rounded p-3 mx-md-4 mt-md-4">

        <div class=" my-2" title="@Model.Message.Subject">
            <span class="fw-bold d-inline-block mw-75px ">Subject:</span>
            <span class="fs-6 text-wrap text-start text-truncate">
                @Model.Message.Subject
            </span>
        </div>

        <div class="my-2">
            <span class="fw-bold d-inline-block mw-75px ">Date:</span>
            <span class="fs-6 text-wrap text-start">
                @Model.Message.ReceivedOn.Date.ToLongDateString()
            </span>
            @switch (Model.Message.Importance)
            {
                case "High":
                    <i class="bi bi-exclamation-circle mx-2 fs-1_5rem text-danger"></i>
                    <span class="fw-bold d-inline-block mw-75px">High Priority</span>
                    break;
                case "Low":
                    <i class="bi bi-thermometer-low mx-2 fs-1_5rem text-secondary"></i>
                    <span class="fw-bold d-inline-block mw-75px">Low Priority</span>
                    break;
                default:
                    break;
            }
        </div>

        <div class="my-2">
            <span class="fw-bold d-inline-block mw-75px">From:</span>
            <partial name="MailboxAddresses" model="Model.Message.From" />
        </div>

        <div class="my-2">
            <span class="fw-bold d-inline-block mw-75px">To:</span>
            <partial name="MailboxAddresses" model="Model.Message.To" />
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.Message.Cc))
        {
            <div class="my-2">
                <span class="fw-bold d-inline-block mw-75px">Cc:</span>
                <partial name="MailboxAddresses" model="Model.Message.Cc" />
            </div>
        }

        @if (!string.IsNullOrWhiteSpace(Model.Message.Bcc))
        {
            <div class="my-2">
                <span class="fw-bold d-inline-block mw-75px">Bcc:</span>
                <partial name="MailboxAddresses" model="Model.Message.Bcc" />
            </div>
        }

        @if (!Model.Message.Sent)
        {
            <div class="my-2">

                <span class="fw-bold d-inline-block mw-75px ">Spam:</span>

                <span id="label--is--spam" class='text-decoration-none fs-6 me-2 @(Model.Message.IsSpam ? "":"d-none")'>
                    SPAM
                    <i class="bi bi-emoji-frown text-bg-danger rounded-pill"></i>
                </span>

                <span id="label--not--spam" class='text-decoration-none fs-6 me-2 @(Model.Message.IsSpam ? "d-none":"")'>
                    Not Spam
                    <i class="bi bi-emoji-smile text-bg-success rounded-pill"></i>
                </span>
            </div>
        }

        @if (Model.Message.Attachements.Count > 0)
        {
            <div class="mb-2 p-2">
                @foreach (var att in Model.Message.Attachements)
                {
                    <a class="badge rounded-pill fs-6 text-bg-primary p-2 text-decoration-none"
                        href="/api/messages/@Model.Message.Id/attachements/@att.Filename">
                        <i class="bi bi-paperclip"></i>
                        @att.Filename
                    </a>
                }
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.Message.HtmlContent))
        {
            <div class="fw-bold my-2">Html View</div>
            <iframe id="html-content" class="w-100 rounded-3" src="/api/messages/@(Model.Message.Id).html"></iframe>
        }

        @if (!string.IsNullOrEmpty(Model.Message.TextContent))
        {
            <div class="fw-bold my-2">Text View</div>
            <div class="card outlined p-2 text-white">@Model.Message.TextContent</div>
        }

        @if (!string.IsNullOrEmpty(Model.Message.Headers))
        {

            <button class="btn btn-sm btn-secondary fw-bold my-2 mt-3" type="button" data-bs-toggle="collapse"
                data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Display Headers
            </button>

            <div class="accordion accordion-flush mt-2" id="accordionExample">
                <div class="accordion-item">
                    <div id="collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div class="accordion-body card rounded">
                            <pre class="whitespace--brsp text-white mb-0 overflow-y-scroll">@Model.Message.Headers</pre>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (Model.Message.RawMessage != null)
        {
            <div class="mt-2">
                <div class="fw-bold">Raw</div>
                <pre>@System.Text.UTF8Encoding.UTF8.GetString(Model.Message.RawMessage.Content)</pre>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"> </script>
    <script src="~/js/view.js" asp-append-version="true"> </script>
}