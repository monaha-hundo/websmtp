@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<nav class="sidebar">
    <section>
        <div class="h2 my-2">websmtp</div>
    </section>
    <nav class="nav nav-pills d-flex flex-column">
        <li class="nav-item mb-2 d-flex">
            <a class="btn btn-primary d-inline-flex align-items-center rounded border-0 "
                 style="flex: 1 1 auto;"
                 href="/">
                <i class="bi bi-inboxes"></i>
                <span class="ms-2">All Mail</span>
            </a>
        </li>
        @foreach (var mailbox in Model.Mailboxes)
        {
            <li class="nav-item  d-flex flex-column">
                <button class="mb-2 btn btn-primary d-inline-flex align-items-center rounded border-0 collapsed"
                    data-bs-toggle="collapse" data-bs-target="#mailbox-@mailbox.Key" aria-expanded="true"
                    style="flex: 1 1 auto;">
                    <i class="bi bi-inbox"></i>
                    <span class="ms-2">@mailbox.Key</span>
                </button>
                <div class="collapse " id="mailbox-@mailbox.Key">
                    <ul class="btn-toggle-nav list-unstyled fw-normal small mb-0">
                        <li class="ms-16 d-flex" style="align-items: center;">
                            <i class="bi bi-arrow-return-right ms-1 me-2"></i>
                            <a class="mb-2 btn btn-primary d-inline-flex align-items-center rounded border-0 collapsed"
                                href="/?host=@mailbox.Key"
                                style="flex: 1 1 auto;">
                                <i class="bi bi-people"></i>
                                <span class="ms-2">All Users</span>
                            </a>
                        </li>
                        @foreach (var recipient in mailbox.Value)
                        {
                            <li class="ms-16 d-flex" style="align-items: center;">
                                <i class="bi bi-arrow-return-right ms-1 me-2"></i>
                                <a class="mb-2 btn btn-primary d-inline-flex align-items-center rounded border-0 collapsed"
                                    href="/?user=@recipient"
                                    style="flex: 1 1 auto;">
                                    <i class="bi bi-person"></i>
                                    <span class="ms-2">@recipient</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </li>
        }
    </nav>
</nav>

<div data-bs-theme="dark" style="height:100%; flex: 1 1 auto; display: flex; flex-direction: column; ">

    <div class="input-group my-2">
        <span class="input-group-text" id="basic-addon1">Filter</span>
        <input type="text" class="form-control" placeholder="Any text value" aria-label="Any text value"
            aria-describedby="basic-addon1">
    </div>

    <section class="py-2"
        style="resize: vertical; overflow-y: auto;  border-left: 1pt solid var(--bs-border-color);border-top: 1pt solid var(--bs-border-color); border-top-left-radius: var(--bs-border-radius);">

        <div class="table-responsive" style="max-heigh: 30vh;">
            <table class="table table-striped table-sm ">
                <thead>
                    <tr>
                        <th class="">Received</th>
                        <th class="">Subject</th>
                        <th class="">To</th>
                        <th class="">From</th>
                        <th class="">Size</th>
                        <th class="">Attch(s).</th>
                        @* <th class=""></th> *@
                    </tr>
                </thead>
                @if (Model.Messages.Count == 0)
                {
                    <tr>
                        <th colspan="7">No messages... yet!</th>
                    </tr>
                }
                @for (int msgId = 0; msgId < Model.Messages.Count; msgId++)
                {
                    var message = Model.Messages[msgId];
                    <tr onclick="openwMsgView('/View?msgId=@message.Id')">
                        <td class="text-nowrap text-truncate">
                            @if (message.ReceivedOn.Date == DateTime.UtcNow.Date)
                            {
                                <span>@message.ReceivedOn.ToString("HH:mm")</span>
                            }
                            else
                            {
                                <span>@message.ReceivedOn.ToString("yyyy-MM-dd")</span>
                            }
                        </td>
                        <td class="text-nowrap text-truncate">@message.Subject</td>
                        <td class="text-nowrap text-truncate">@message.To</td>
                        <td class="text-nowrap text-truncate">@message.From</td>
                        <td class="text-nowrap text-truncate">@(message.Size)b</td>
                        <td class="text-nowrap text-truncate">@(message.Attachements.Count)</td>
                        @* <td>
                    <a class="btn btn-secondary" href="/View?msgId=@message.Id" target="msg-view"
                    onclick="openwMsgView()">View</a>
                    <button id="msg-read-mark-@msgId" class="btn btn-secondary" href="/?markAsReadMsgId=@msgId"
                    target="msg-view" onclick="markMessageAsRead('@message.Id')"><i
                    class="bi bi-bookmark"></i></button>
                    </td> *@
                    </tr>
                }
            </table>
        </div>

        @* @if (Model.Pages > 1)
        {
            <div>
                <nav style="width: auto; display: inline-block;">
                    <ul class="pagination">
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        @for (int pageNb = 1; pageNb <= Model.Pages; pageNb++)
                        {
                            <li class="page-item"><a class="page-link"
                                    href="/?onlyNew=@Model.OnlyNew&page=@pageNb&perPage=@Model.PerPage">@pageNb</a></li>
                        }
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>

                <select class="form-select d-inline" style="width: auto;">
                    <option selected="@(Model.PerPage == 5)">5</option>
                    <option selected="@(Model.PerPage == 50)">50</option>
                    <option selected="@(Model.PerPage == 100)">100</option>
                    <option selected="@(Model.PerPage == 500)">500</option>
                    <option selected="@(Model.PerPage == 1000)">1000</option>
                </select>
            </div>
        } *@
    </section>

    <section id="msg"
        style=" flex: 1 1 auto; resize: vertical; overflow-y: auto; border-left: 1pt solid var(--bs-border-color);">
        <div id="msg-view-container" style="display: none;padding-left: 1em;" >
            @* <a class="btn btn-secondary" href="about:blank" target="msg-view" onclick="closeMsgView()"
                style="margin-bottom: 0.5em;">Close</a> *@
            <iframe id="msg-view" name="msg-view" style="width: 100%; height: 100px;"
                src="data:text/html;base64,PGh0bWwgc3R5bGU9ImJhY2tncm91bmQ6IHJnYigzMywgMzcsIDQxKTsiPjwvaHRtbD4K"></iframe>
        </div>
    </section>
</div>

@section Scripts{
    <script>
        function openwMsgView(url) {
            let sectionEl = document.querySelector('#msg-view-container');
            sectionEl.style.display = 'block';
            //const url = `/View?msgId=${message.id}`;
            let msgViewEl = document.getElementById('msg-view');
            msgViewEl.setAttribute('src', url);
        }
        function closeMsgView() {
            let sectionEl = document.querySelector('#msg-view-container');
            sectionEl.style.display = 'none';
        }
        function handleMessage(event) {
            if (event.origin != window.location.origin) { return; }
            let height = event.data.split(':')[1];
            document.querySelector('#msg-view').style.height = height + 'px';
        }
        async function markMessageAsRead(msgId) {
            const response = await fetch(`/?markAsReadMsgId=${msgId}`);
            const result = await response.text();
            const success = result == "200";
            console.log(success);
            if (success) {
                const checkMarkEl = document.getElementById('msg-read-mark-' + msgId);
                checkMarkEl.innerHTML = '<i class="bi bi-bookmark-check"></i>';
            }
        }

        window.addEventListener('message', handleMessage, false);
    </script>
}