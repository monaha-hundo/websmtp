@page "/{mailbox}"
@model IndexModel
@{
    // use compile time regex
    var regex = new System.Text.RegularExpressions.Regex(@"""(.+)"" <(.+)>");
}

@section Head {
    <link rel="stylesheet" href="~/lib/sweetalert2/sweetalert2.min.css" />
}

<a class="logout--btn btn btn-primary mx-2 my-2 text-nowrap rounded-pill position-fixed" href="/logout" title="Log Out">
    <i class="bi bi-door-open fs-1_5rem"></i>
</a>
<btn class="hamburger--btn btn btn-primary mx-2 my-2 text-nowrap rounded-pill position-fixed d-xl-none">
    <i class="bi bi-list fs-1_5rem"></i>
</btn>

<partial name="Sidebar" model="Model.Listing" />

<div class="content">
    <section class="listing d-flex flex-column h-100">

        <partial name="SearchForm" model="Model" />

        <div id="messages--list" class="list list-group h-100 overflow-y-scroll position-relative max-height-100p">
            <div id="messages--list--header" class="list-group-item  border-left-none px-1 position-sticky ">
                <div class="row align-items-center  g-0 px-2">
                    <div class="col-auto d-flex align-items-center">
                        <span class="me-3" id="msg--list-checkbox_all" checked="false" tabindex="0">
                            <i class="bi bi-square"></i>
                            <i class="bi bi-check-square d-none"></i>
                        </span>
                    </div>
                    <div class="col-auto text-truncate d-flex align-items-center ">
                        <span class="text-capitalize fs-3 me-3">@Model.Mailbox</span>
                        <span class="d-none" id="multiple--selection">
                            @if (Model.Mailbox != "trash" && Model.Mailbox != "sent")
                            {
                                <button class="btn btn-secondary me-3" id="delete-selected">
                                    <i class="bi bi-trash"></i>
                                </button>
                            }
                            <button class="btn btn-secondary me-3" id="mark-selected-as-read">
                                <i class="bi bi-eye-fill"></i>
                            </button>
                            <button class="btn btn-secondary me-3" id="mark-selected-as-unread">
                                <i class="bi bi-eye-slash-fill"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
            @if (Model.Listing.Messages.Count == 0)
            {
                <div class="list-group-item  d-flex border-left-none">
                    <div colspan="7">Empty</div>
                </div>
            }

            @for (int msgId = 0; msgId < Model.Listing.Messages.Count; msgId++)
            {
                var message = Model.Listing.Messages[msgId];
                <div href="/View?msgId=@message.Id"
                    class='list-group-item list-group-item-action border-left-none px-1 py-2 @(message.Read ? "" : "unread")'
                    msg-id="@message.Id">
                    <div class="row align-items-center  g-0 px-2 flex-lg-nowrap">
                        <div class="col-12 col-lg-2 d-flex align-items-center">
                            <span class="me-3" id="msg--list-checkbox_@message.Id" msg-id="@message.Id" checked="false"
                                tabindex="0">
                                <i class="bi bi-square"></i>
                                <i class="bi bi-check-square d-none"></i>
                            </span>
                            <span id="msg--list-star_@message.Id" msg-id="@message.Id" class="me-3 position-relative"
                                checked='@(message.Stared ? "true":"false")' tabindex="0">
                                <i class='bi bi-star @(message.Stared ? "d-none":"")'></i>
                                <i class='bi bi-star-fill @(message.Stared ? "":"d-none")'></i>
                            </span>

                            @foreach (var singleOrigin in message.From.Split(',', StringSplitOptions.RemoveEmptyEntries))
                            {
                                var result = regex.Matches(singleOrigin);
                                if (result.Count == 0)
                                {
                                    <span class="text-nowrap text-truncate">@message.From</span>
                                }
                                else
                                {
                                    var name = result[0].Groups[1];
                                    var email = result[0].Groups[2]; ;
                                    <span title="@email" class="me-2 text-nowrap text-truncate">@name</span>
                                }
                            }
                        </div>
                        <div class="col-12 col-lg-auto flex-shrink-1 text-truncate cursor-pointer text-no-wrap"
                            open-msg-view="@message.Id" tabindex="0">
                            @message.Subject
                        </div>
                        <div class="col col-auto flex-grow-1"></div>
                        <div
                            class="col-12 col-lg-auto d-flex justify-content-start justify-lg-content-between align-items-center">
                            @if (message.AttachementsCount > 0)
                            {
                                <span class="me-2"><i class="bi bi-paperclip"></i>@message.AttachementsCount</span>
                            }

                            @if (Model.Mailbox == "trash")
                            {
                                <button type="button" class="btn btn-sm btn-outlined rounded-pill"
                                    undelete-msg-id="@message.Id">
                                    <i class="bi bi-recycle"></i>
                                </button>
                            }
                            else if (Model.Mailbox != "sent")
                            {
                                <button type="button" class="btn btn-sm btn-outlined rounded-pill" delete-msg-id="@message.Id">
                                    <i class="bi bi-trash"></i>
                                </button>
                            }
                            <button type="button"
                                class='btn btn-sm btn-outlined rounded-pill me-2 @(message.Read?"d-none":"")'
                                read-msg-id="@message.Id">
                                <i class="bi bi-eye-fill"></i>
                            </button>
                            <button type="button"
                                class='btn btn-sm btn-outlined rounded-pill me-2 @(message.Read?"":"d-none")'
                                unread-msg-id="@message.Id">
                                <i class="bi bi-eye-slash-fill"></i>
                            </button>

                            @if (DateTime.UtcNow - message.ReceivedOn < TimeSpan.FromHours(1))
                            {
                                <span title="@message.ReceivedOn.ToLocalTime()">
                                    @(Math.Round((DateTime.UtcNow - message.ReceivedOn).TotalMinutes))m ago
                                </span>
                            }
                            else if (DateTime.UtcNow - message.ReceivedOn <= TimeSpan.FromHours(48))
                            {
                                <span title="@message.ReceivedOn.ToLocalTime()">
                                    @(Math.Round((DateTime.UtcNow - message.ReceivedOn).TotalHours))h ago
                                </span>
                            }
                            else
                            {
                                <span title="@message.ReceivedOn.ToLocalTime()">@message.ReceivedOn.ToString("dd MMMM")</span>
                            }

                        </div>
                    </div>
                </div>
            }
        </div>

    </section>

    <section id="msg" class="d-none">
        <div id="msg-view-container" class="position-relative d-none">

        </div>
    </section>

    <section id="new--message" class="d-none">
    </section>
</div>

@section Scripts {
    <script src="~/lib/sweetalert2/sweetalert2.min.js" asp-append-version="true"></script>
    <script src="~/js/index.js"></script>
}